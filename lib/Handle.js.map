{"version":3,"sources":["../src/Handle.js"],"names":["Handle","nextProps","props","index","handleRadius","handleColor","hover","down","background","handleStroke","xval","yval","onMouseEnter","onMouseLeave","onMouseDown","x","y","sx","sy","cx","cy","a","Math","atan2","cxs","cos","cys","sin","BezierComponent"],"mappings":"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","file":"Handle.js","sourcesContent":["import React from \"react\";\r\nimport BezierComponent from \"./BezierComponent\";\r\n\r\nexport default class Handle extends BezierComponent {\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    if (super.shouldComponentUpdate(nextProps)) return true;\r\n    const {\r\n      index,\r\n      handleRadius,\r\n      handleColor,\r\n      hover,\r\n      down,\r\n      background,\r\n      handleStroke,\r\n      xval,\r\n      yval,\r\n      onMouseEnter,\r\n      onMouseLeave,\r\n      onMouseDown\r\n    } = this.props;\r\n    return nextProps.index !== index ||\r\n    nextProps.handleRadius !== handleRadius ||\r\n    nextProps.handleColor !== handleColor ||\r\n    nextProps.hover !== hover ||\r\n    nextProps.down !== down ||\r\n    nextProps.background !== background ||\r\n    nextProps.handleStroke !== handleStroke ||\r\n    nextProps.xval !== xval ||\r\n    nextProps.yval !== yval ||\r\n    nextProps.onMouseDown !== onMouseDown ||\r\n    nextProps.onMouseLeave !== onMouseLeave ||\r\n    nextProps.onMouseEnter !== onMouseEnter;\r\n  }\r\n\r\n  render() {\r\n    const { x, y } = this;\r\n    const {\r\n      index,\r\n      handleRadius,\r\n      handleColor,\r\n      hover,\r\n      down,\r\n      background,\r\n      handleStroke,\r\n      xval,\r\n      yval,\r\n      onMouseEnter,\r\n      onMouseLeave,\r\n      onMouseDown\r\n    } = this.props;\r\n\r\n    const sx = x(index);\r\n    const sy = y(index);\r\n    const cx = x(xval);\r\n    const cy = y(yval);\r\n    const a = Math.atan2(cy-sy, cx-sx);\r\n    const cxs = cx - handleRadius * Math.cos(a);\r\n    const cys = cy - handleRadius * Math.sin(a);\r\n\r\n    return <g>\r\n      <line\r\n        stroke={handleColor}\r\n        strokeWidth={hover||down ? 1 + handleStroke : handleStroke}\r\n        x1={cxs}\r\n        y1={cys}\r\n        x2={sx}\r\n        y2={sy} />\r\n      <circle\r\n        cx={cx}\r\n        cy={cy}\r\n        r={handleRadius}\r\n        stroke={handleColor}\r\n        strokeWidth={hover||down ? 2 * handleStroke : handleStroke}\r\n        fill={down ? background: handleColor}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n        onMouseDown={onMouseDown} />\r\n    </g>;\r\n  }\r\n}\r\n"]}