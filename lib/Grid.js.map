{"version":3,"sources":["../src/Grid.js"],"names":["range","from","to","step","t","i","push","sameShadowObject","a","b","aKeys","Object","keys","bKeys","length","Grid","div","map","x","y","nextProps","props","background","gridColor","textStyle","sx","sy","ex","ey","xhalf","gridX","yhalf","gridY","xtenth","ytenth","gridbg","tenth","xp","concat","yp","join","half","ticksLeft","w","ticksBottom","h","textAnchor","dominantBaseline","BezierComponent"],"mappings":"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","file":"Grid.js","sourcesContent":["import React from \"react\";\r\nimport BezierComponent from \"./BezierComponent\";\r\n\r\nfunction range(from, to, step) {\r\n  const t = [];\r\n  for (let i = from; i < to; i += step)\r\n    t.push(i);\r\n  return t;\r\n}\r\n\r\nfunction sameShadowObject(a, b) {\r\n  const aKeys = Object.keys(a);\r\n  const bKeys = Object.keys(b);\r\n  if (aKeys.length !== bKeys.length) return false;\r\n  for (let i in a) {\r\n    if (a[i] !== b[i]) return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default class Grid extends BezierComponent {\r\n  gridX(div) {\r\n    var step = 1 / div;\r\n    return range(0, 1, step).map(this.x);\r\n  }\r\n\r\n  gridY(div) {\r\n    var step = 1 / div;\r\n    return range(0, 1, step).map(this.y);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    if (super.shouldComponentUpdate(nextProps)) return true;\r\n    const { background, gridColor, textStyle } = this.props;\r\n    return (\r\n      nextProps.background !== background ||\r\n      nextProps.gridColor !== gridColor ||\r\n      !sameShadowObject(nextProps.textStyle, textStyle)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { x, y } = this;\r\n    const { background, gridColor, textStyle } = this.props;\r\n\r\n    const sx = x(0);\r\n    const sy = y(0);\r\n    const ex = x(1);\r\n    const ey = y(1);\r\n\r\n    const xhalf = this.gridX(2);\r\n    const yhalf = this.gridY(2);\r\n    const xtenth = this.gridX(10);\r\n    const ytenth = this.gridY(10);\r\n\r\n    const gridbg = `M${sx},${sy} L${sx},${ey} L${ex},${ey} L${ex},${sy} Z`;\r\n\r\n    const tenth = xtenth\r\n      .map(xp => `M${xp},${sy} L${xp},${ey}`)\r\n      .concat(ytenth.map(yp => `M${sx},${yp} L${ex},${yp}`))\r\n      .join(\" \");\r\n\r\n    const half = xhalf\r\n      .map(xp => `M${xp},${sy} L${xp},${ey}`)\r\n      .concat(yhalf.map(yp => `M${sx},${yp} L${ex},${yp}`))\r\n      .concat([`M${sx},${sy} L${ex},${ey}`])\r\n      .join(\" \");\r\n\r\n    const ticksLeft = ytenth\r\n      .map((yp, i) => {\r\n        const w = 3 + (i % 5 === 0 ? 2 : 0);\r\n        return `M${sx},${yp} L${sx - w},${yp}`;\r\n      })\r\n      .join(\" \");\r\n\r\n    const ticksBottom = xtenth\r\n      .map((xp, i) => {\r\n        const h = 3 + (i % 5 === 0 ? 2 : 0);\r\n        return `M${xp},${sy} L${xp},${sy + h}`;\r\n      })\r\n      .join(\" \");\r\n\r\n    return (\r\n      <g>\r\n        <path fill={background} d={gridbg} />\r\n        <path strokeWidth=\"1px\" stroke={gridColor} d={tenth} />\r\n        <path strokeWidth=\"2px\" stroke={gridColor} d={half} />\r\n        <path strokeWidth=\"1px\" stroke={gridColor} d={ticksLeft} />\r\n        <text\r\n          style={{ textAnchor: \"end\", ...textStyle }}\r\n          transform=\"rotate(-90)\"\r\n          x={-this.y(1)}\r\n          y={this.x(0) - 8}\r\n        >\r\n          Progress Percentage\r\n        </text>\r\n        <path strokeWidth=\"1px\" stroke={gridColor} d={ticksBottom} />\r\n        <text\r\n          style={{ dominantBaseline: \"text-before-edge\", ...textStyle }}\r\n          textAnchor=\"end\"\r\n          x={this.x(1)}\r\n          y={this.y(0) + 5}\r\n        >\r\n          Time Percentage\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n"]}